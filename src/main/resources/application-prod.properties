# This tells Spring to use this file for the 'prod' profile.
# We will set this as an environment variable in Render.
# spring.profiles.active=prod

# --- Server Configuration ---
# The port where the application will run. Render will automatically map this to its own port.
server.port=8080

# --- Database Configuration ---
# The properties below will be injected by Render's environment variables.
# For security, do NOT hardcode these in your file.
# spring.datasource.url=...
# spring.datasource.username=...
# spring.datasource.password=...

# The dialect for PostgreSQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# `update` is fine for now, but in a real production environment,
# you would typically set this to `validate` or `none` and use a tool like Flyway or Liquibase
# for database migrations.
spring.jpa.hibernate.ddl-auto=update

# Show SQL queries for debugging in production logs.
# Set this to false after you've verified everything works.
spring.jpa.show-sql=true

# --- Logging Configuration ---
# Setting logging to INFO for production.
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.com.purehealthyeats=DEBUG

# --- Razorpay Configuration ---
# The keys will be injected from Render's environment variables for security.
# razorpay.key.id=...
# razorpay.key.secret=...


# PostgreSQL settings for Render
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Razorpay Live Keys
razorpay.id=${RAZORPAY_KEY_ID}
razorpay.secret=${RAZORPAY_KEY_SECRET}
